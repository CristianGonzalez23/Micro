version: '3.8'

services:
  app:
    build: .
    container_name: python_app
    ports:
      - "5000:5000"
    depends_on:
      - db
      - rabbitmq
      - logstash
      - elasticsearch
    environment:
      - MYSQL_USER=root
      - MYSQL_PASSWORD=rootpassword
      - MYSQL_DB=mydatabase
      - MYSQL_HOST=mysql_db
      - MYSQL_PORT=3306
    volumes:
      - ./static:/app/static  # Montar el directorio est√°tico para Swagger
    networks:
      - my_network

  db:
    image: mysql:5.7
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydatabase
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - my_network

  mysqld_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld_exporter
    environment:
      DATA_SOURCE_NAME: "root:rootpassword@tcp(mysql_db:3306)/mydatabase"
    ports:
      - "9104:9104"
    depends_on:
      - db
    volumes:
      - ./my.cnf:/root/.my.cnf
    networks:
      - my_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ broker port
      - "15672:15672"  # RabbitMQ management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - my_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - my_network

  logstash:
    image: docker.elastic.co/logstash/logstash:7.10.1
    container_name: logstash
    ports:
      - "5044:5044"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    networks:
      - my_network

  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.1
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - my_network

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins  # Usar el Dockerfile personalizado
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
    networks:
      - my_network

  notification_service:
    build:
      context: ./notification_service
    container_name: notification_service
    ports:
      - "5005:5005"
    environment:
      - SMTP_SERVER=smtp.gmail.com
      - SMTP_PORT=587
      - EMAIL=cristianr.gonzalezi@uqvirtual.edu.co
      - PASSWORD=Crisgonza_20
    networks:
      - my_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - notification_service
    networks:
      - my_network

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml
    ports:
      - "9093:9093"
    networks:
      - my_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - my_network

volumes:
  db_data:
  rabbitmq_data:
  es_data:
  jenkins_home:
  grafana_data:

networks:
  my_network:
    driver: bridge